<?xml version="1.0" encoding="utf-8"?>
<!--
  ~  Copyright (c) 2016. Fundación Ayesa
  ~  Licensed under the Apache License, Version 2.0 (the "License");
  ~  you may not use this file except in compliance with the License.
  ~  You may obtain a copy of the License at
  ~
  ~  http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~  Unless required by applicable law or agreed to in writing, software
  ~  distributed under the License is distributed on an "AS IS" BASIS,
  ~  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~  See the License for the specific language governing permissions and
  ~  limitations under the License.
  ~
  ~  @author Juan Aguilar
  -->
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="org.fundacionayesa.campusfa">

    <!-- Este permiso permite a la aplicación hacer peticiones de red-->
    <uses-permission android:name="android.permission.INTERNET" />

    <!-- El atributo name indica que nuestra aplicación debe ejecutar TVShowsApplication
         al lanzar la app, en vez de la clase Application por defecto.
         Aquí podremos crear nuestro componente Dagger singleton (ApplicationComponent)-->

    <application
        android:name=".TVShowsApplication"
        android:allowBackup="true"
        android:icon="@mipmap/ic_launcher"
        android:label="TV Shows FA"
        android:supportsRtl="true"
        android:theme="@style/AppTheme">
        <activity android:name=".view.ShowListActivity">
            <!-- Filtro que indica qué activity es la que se lanza cuando se inicia la aplicación-->
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />
                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
    </application>

</manifest>